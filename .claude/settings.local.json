{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(curl -LsSf https://astral.sh/uv/install.sh)",
      "Bash(sh)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(uv sync:*)",
      "Bash(uv run alembic:*)",
      "Bash(python3:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(cat:*)",
      "Bash(docker ps:*)",
      "Bash(curl -s https://api.opsflux.io/openapi.json -o /etc/dokploy/compose/perenco-opsflux-gwxapr/code/frontend/openapi.json)",
      "Bash(npm install:*)",
      "Bash(docker logs:*)",
      "Read(//etc/dokploy/compose/perenco-opsflux-gwxapr/**)",
      "Bash(curl -s -X POST https://api.opsflux.io/api/v1/login/access-token -H \"Content-Type: application/x-www-form-urlencoded\" -d \"username=admin@opsflux.io\" -d \"password=RldgAHG%Jqlrq6T*RjsZq3is\" -c /tmp/cookies.txt)",
      "Read(//tmp/**)",
      "Bash(curl:*)",
      "Bash(git log:*)",
      "Bash(source .env)",
      "Bash(git remote set-url:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(npm run build)",
      "Bash(docker-compose ps:*)",
      "Bash(docker compose:*)",
      "Bash(docker restart:*)",
      "Bash(docker build:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(docker exec:*)",
      "Bash(docker inspect:*)",
      "Read(//usr/local/bin/**)",
      "Bash(export SHADCNBLOCKS_API_KEY=sk_live_7ognw_mHlSWgB3NMpg8UFpxxQMnmmk6G)",
      "WebFetch(domain:shadcnblocks.com)",
      "WebSearch",
      "WebFetch(domain:docs.shadcnblocks.com)",
      "WebFetch(domain:www.shadcnblocks.com)",
      "Bash(unzip:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(timeout 20 docker logs perenco-opsflux-gwxapr-backend-1 --tail 5 --follow)",
      "Bash(timeout 20 docker logs perenco-opsflux-gwxapr-backend-1 --tail 10 --follow)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEwNzYzOTAsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.jwlDLEOHgrZGlZIs8ckCATCc8z1hbI4suCXbClbABXk\")",
      "Bash(docker cp:*)",
      "Bash(timeout 20 docker logs perenco-opsflux-gwxapr-backend-1 --tail 30 --follow)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEwNzczMjEsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.DvUfUm92XOnPwyuKBvYKYiDPzgXHpWo5jm_5kozifws\")",
      "Bash(npm run build:*)",
      "Bash(git diff:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEwODc1NzksInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.kh1uw1OHMBfmNSlOKKRrZjishR029n-vTV8_tlMX784\")",
      "Bash(timeout 5 docker logs perenco-opsflux-gwxapr-backend-1 --tail 50)",
      "Bash(sudo lsof:*)",
      "Bash(docker images:*)",
      "Bash(head:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEwODc1NzksInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.kh1uw1OHMBfmNSlOKKRrZjishR029n-vTV8_tlMX784\" curl -s -X POST http://localhost:8000/api/v1/2fa/setup-totp -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjExNjc4OTQsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.4x5YVHA2GEIrDg0jE3qf8OWckk9HVpYFVJJcGgqpi3E\" curl -s -X POST http://localhost:8000/api/v1/2fa/setup-totp -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjExNjc5NDQsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.rQbuy-RW3JTsndTL39cyAEUAwvNIlMbPMbzMQ2emQcs\" curl -s -X POST http://localhost:8000/api/v1/2fa/setup-totp -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\")",
      "Bash(timeout 5 docker logs perenco-opsflux-gwxapr-backend-1 --tail 30)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjExNjc5NDQsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.rQbuy-RW3JTsndTL39cyAEUAwvNIlMbPMbzMQ2emQcs\" curl -s -X POST http://localhost:8000/api/v1/2fa/setup-totp -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\" -v)",
      "Bash(git reset:*)",
      "Bash(timeout 10 docker logs perenco-opsflux-gwxapr-frontend-1 --tail 50 --follow)",
      "Bash(docker start:*)",
      "Bash(docker-compose build:*)",
      "Bash(timeout 5 docker logs perenco-opsflux-gwxapr-backend-1 --tail 20)",
      "Bash(timeout 5 docker logs perenco-opsflux-gwxapr-backend-1)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjExNjc5NDQsInN1YiI6ImVjZDUwNDU3LTgyYjMtNDgzNi1hMDU2LTNhYTE0MzUwNjE3MSJ9.rQbuy-RW3JTsndTL39cyAEUAwvNIlMbPMbzMQ2emQcs\" curl -s -X PUT http://localhost:8000/api/v1/settings/ -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\" -d '{\"\"\"\"email_host\"\"\"\": \"\"\"\"smtp.example.com\"\"\"\"}')",
      "Bash(opsflux-backend:latest )",
      "Bash(fastapi run:*)",
      "Bash(docker network:*)",
      "Bash(timeout 5 docker logs code-frontend-1)",
      "Bash(timeout 5 docker logs code-frontend-1 --tail 20)",
      "Bash(timeout 5 docker logs code-backend-1 --tail 20)",
      "Bash(timeout 5 docker logs code-frontend-1 --tail 50)",
      "Bash(timeout 5 docker logs code-backend-1 --tail 50)",
      "Bash(timeout 10 docker logs:*)",
      "Bash(timeout 5 docker logs code-frontend-1 --tail 30)",
      "Bash(docker-compose restart:*)",
      "Bash(pkill:*)",
      "Bash(awk:*)",
      "Bash(xargs -r docker rm -f)",
      "Bash(timeout 20 docker logs code-backend-1 --tail 30 --follow)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEyMzEwMzEsInN1YiI6Ijg0ZjdjM2M0LTA1ZWYtNDZjYS1hNDEzLWUyZjE0Zjk0NjYwYyIsInR5cGUiOiJhY2Nlc3MifQ.ZLd3sjn_SedYO4S1wFXtA6JXBV4MJIs8rKp9rUSlwyY\" curl -s -X GET http://localhost:8000/api/v1/developers/ -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\")",
      "Bash(docker rmi:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjEyMzEwMzEsInN1YiI6Ijg0ZjdjM2M0LTA1ZWYtNDZjYS1hNDEzLWUyZjE0Zjk0NjYwYyIsInR5cGUiOiJhY2Nlc3MifQ.ZLd3sjn_SedYO4S1wFXtA6JXBV4MJIs8rKp9rUSlwyY\" curl -s -X GET http://localhost:8000/api/v1/api-keys/ -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: application/json\")",
      "Bash(timeout 5 docker logs code-backend-1 --tail 30)"
    ],
    "deny": [],
    "ask": []
  },
  "decisionMaking": {
    "autonomy": "full",
    "mode": "overnight_autonomous",
    "priorities": [
      "robustesse",
      "professionnalisme",
      "ergonomie",
      "visibilité d'utilisation",
      "intuitivité",
      "sécurité",
      "maintenabilité"
    ],
    "guidelines": {
      "makeDecisionsAutonomously": true,
      "commitAfterStableFeatures": true,
      "installDependenciesAsNeeded": true,
      "fixBugsWhenEncountered": true,
      "addErrorHandling": true,
      "documentComplexCode": true,
      "useTypeScriptStrictMode": true,
      "followExistingPatterns": true,
      "useDokployAPI": true
    }
  },
  "dokployAPI": {
    "url": "http://72.60.188.156:3000/api",
    "apiKeyEnvVar": "API_DOKPLOY",
    "usage": "Utiliser l'API Dokploy pour toutes les opérations Docker (logs, restart, status, etc.) au lieu des commandes docker directes. L'API key est dans .env"
  }
}
